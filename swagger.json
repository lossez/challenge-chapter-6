{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server UserGame",
    "version": "1.0.0",
    "title": "UserGame API Documentation"
  },
  "host": "binar-challenge-chapter-6.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "user_game",
      "description": "Everything about your User Game"
    },
    {
      "name": "user_game_history",
      "description": "Access to Petstore orders"
    }
  ],
  "paths": {
    "/usergame": {
      "post": {
        "tags": ["user_game"],
        "summary": "Add a new usergame",
        "description": "",
        "operationId": "addUserGame",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usergame added successfully",
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        }
      },
      "get": {
        "tags": ["user_game"],
        "summary": "Get all usergames",
        "description": "",
        "operationId": "getUserGames",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetAllUserGame"
              }
            }
          }
        }
      }
    },

    "/usergame/{id}": {
      "get": {
        "tags": ["user_game"],
        "summary": "Find usergame by ID",
        "description": "Returns a single usergame",
        "operationId": "getUserGameById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetUserGameById"
            }
          },
          "404": {
            "description": "user id not found"
          }
        }
      },
      "put": {
        "tags": ["user_game"],
        "summary": "Updated usergame",
        "operationId": "updateUserGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sucessfully update user"
          },
          "404": {
            "description": "user id not found"
          }
        }
      },
      "delete": {
        "tags": ["user_game"],
        "summary": "Deletes a usergame",
        "description": "",
        "operationId": "deleteUserGame",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "user id not found"
          }
        }
      }
    },

    "/history": {
      "post": {
        "tags": ["user_game_history"],
        "summary": "Add a new usergame history",
        "description": "",
        "operationId": "addUserGameHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGameHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "History added successfully",
            "schema": {
              "$ref": "#/definitions/UserGameHistory"
            }
          }
        }
      },
      "get": {
        "tags": ["user_game_history"],
        "summary": "Get all usergame history",
        "description": "",
        "operationId": "getUserGameHistory",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGameHistory"
              }
            }
          }
        }
      }
    },

    "/history/{id}": {
      "get": {
        "tags": ["user_game_history"],
        "summary": "Find usergame history by ID",
        "description": "Returns a single usergame history",
        "operationId": "getUserGameHistoryById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserGameHistory"
            }
          },
          "404": {
            "description": "history id not found"
          }
        }
      },
      "put": {
        "tags": ["user_game_history"],
        "summary": "Updated usergame history",
        "operationId": "updateUserGameHistory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated usergame history object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGameHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sucessfully update usergame history"
          },
          "404": {
            "description": "user id not found"
          }
        }
      },
      "delete": {
        "tags": ["user_game_history"],
        "summary": "Deletes a usergame history",
        "description": "",
        "operationId": "deleteUserGameHistory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "history id not found"
          }
        }
      }
    }
  },
  "definitions": {
    "UserGame": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "umur": {
          "type": "integer"
        }
      }
    },
    "GetAllUserGame": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "user_game_biodata": {
          "$ref": "#/definitions/UserGameBiodata"
        }
      }
    },
    "UserGameBiodata": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "umur": {
          "type": "integer",
          "format": "int64"
        }
      }
    },

    "GetUserGameById": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "user_game_biodata": {
          "$ref": "#/definitions/UserGameBiodata"
        },
        "user_game_history": {
          "$ref": "#/definitions/UserGameHistory"
        }
      }
    },

    "UserGameHistory": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },

    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
